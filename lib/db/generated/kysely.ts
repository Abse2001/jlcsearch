/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface Category {
  category: string;
  id: number;
  subcategory: string;
}

export interface Component {
  basic: number;
  category_id: number;
  datasheet: string;
  description: string;
  extra: string | null;
  flag: Generated<number>;
  joints: number;
  last_on_stock: Generated<number>;
  last_update: number;
  lcsc: number;
  manufacturer_id: number;
  mfr: string;
  package: string;
  preferred: Generated<number>;
  price: string;
  stock: number;
  in_stock: Generated<boolean>;
}

export interface Manufacturer {
  id: number;
  name: string;
}

export interface VComponent {
  basic: number | null;
  category: string | null;
  category_id: number | null;
  datasheet: string | null;
  description: string | null;
  extra: string | null;
  joints: number | null;
  last_on_stock: number | null;
  lcsc: number | null;
  manufacturer: string | null;
  mfr: string | null;
  package: string | null;
  preferred: number | null;
  price: string | null;
  stock: number | null;
  subcategory: string | null;
}

export interface DB {
  categories: Category;
  components: Component;
  manufacturers: Manufacturer;
  v_components: VComponent;
}
